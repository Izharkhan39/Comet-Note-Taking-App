import {
  __commonJS
} from "./chunk-EQCVQC35.js";

// node_modules/editorjs-undo/dist/bundle.js
var require_bundle = __commonJS({
  "node_modules/editorjs-undo/dist/bundle.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Undo = e() : t.Undo = e();
    }(self, function() {
      return (() => {
        "use strict";
        var t = { d: (e2, n2) => {
          for (var i2 in n2) t.o(n2, i2) && !t.o(e2, i2) && Object.defineProperty(e2, i2, { enumerable: true, get: n2[i2] });
        }, o: (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2) }, e = {};
        function n(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        t.d(e, { default: () => s });
        var i = function() {
          function t2(e3, n2) {
            !function(t3, e4) {
              if (!(t3 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, t2), this.holder = n2, this.observer = null, this.debounceTimer = 200, this.mutationDebouncer = this.debounce(function() {
              e3();
            }, this.debounceTimer);
          }
          var e2, i2;
          return e2 = t2, i2 = [{ key: "setMutationObserver", value: function() {
            var t3 = this, e3 = this.holder;
            this.observer = new MutationObserver(function(e4) {
              t3.mutationHandler(e4);
            }), this.observer.observe(e3, { childList: true, attributes: true, subtree: true, characterData: true, characterDataOldValue: true });
          } }, { key: "mutationHandler", value: function(t3) {
            var e3 = this, n2 = false;
            t3.forEach(function(t4) {
              switch (t4.type) {
                case "childList":
                  t4.target === e3.holder ? e3.onDestroy() : n2 = true;
                  break;
                case "characterData":
                  n2 = true;
                  break;
                case "attributes":
                  t4.target.classList.contains("ce-block") || (n2 = true);
              }
            }), n2 && this.mutationDebouncer();
          } }, { key: "debounce", value: function(t3, e3) {
            var n2, i3 = this;
            return function() {
              for (var o2 = arguments.length, s2 = new Array(o2), r = 0; r < o2; r++) s2[r] = arguments[r];
              var a = i3;
              clearTimeout(n2), n2 = setTimeout(function() {
                return t3.apply(a, s2);
              }, e3);
            };
          } }, { key: "onDestroy", value: function() {
            var t3 = new CustomEvent("destroy");
            document.dispatchEvent(t3), this.observer.disconnect();
          } }], i2 && n(e2.prototype, i2), t2;
        }();
        function o(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var s = function() {
          function t2(e3) {
            var n3 = this, o2 = e3.editor, s3 = e3.config, r = void 0 === s3 ? {} : s3, a = e3.onUpdate, c = e3.maxLength;
            !function(t3, e4) {
              if (!(t3 instanceof e4)) throw new TypeError("Cannot call a class as a function");
            }(this, t2);
            var h = { maxLength: 30, onUpdate: function() {
            }, config: { shortcuts: { undo: "CMD+Z", redo: "CMD+Y" } } }, u = o2.configuration, l = u.holder, d = h.config.shortcuts, f = r.shortcuts, v = void 0 === f ? d : f;
            this.holder = "string" == typeof l ? document.getElementById(l) : l, this.editor = o2, this.shouldSaveHistory = true, this.readOnly = u.readOnly, this.maxLength = c || h.maxLength, this.onUpdate = a || h.onUpdate, this.config = { shortcuts: v }, new i(function() {
              return n3.registerChange();
            }, this.holder).setMutationObserver(), this.setEventListeners(), this.initialItem = null, this.clear();
          }
          var e2, n2, s2;
          return e2 = t2, s2 = [{ key: "isReadOnlySupported", get: function() {
            return true;
          } }], (n2 = [{ key: "truncate", value: function(t3, e3) {
            for (; t3.length > e3; ) t3.shift();
          } }, { key: "initialize", value: function(t3) {
            var e3 = "blocks" in t3 ? t3.blocks : t3, n3 = { index: e3.length - 1, state: e3 };
            this.stack[0] = n3, this.initialItem = n3;
          } }, { key: "clear", value: function() {
            this.stack = this.initialItem ? [this.initialItem] : [{ index: 0, state: [{ type: "paragraph", data: { text: "" } }] }], this.position = 0, this.onUpdate();
          } }, { key: "registerChange", value: function() {
            var t3 = this;
            this.readOnly || (this.editor && this.editor.save && this.shouldSaveHistory && this.editor.save().then(function(e3) {
              t3.editorDidUpdate(e3.blocks) && t3.save(e3.blocks);
            }), this.shouldSaveHistory = true);
          } }, { key: "editorDidUpdate", value: function(t3) {
            var e3 = this.stack[this.position].state;
            return !!t3.length && (t3.length !== e3.length || JSON.stringify(e3) !== JSON.stringify(t3));
          } }, { key: "save", value: function(t3) {
            this.position >= this.maxLength && this.truncate(this.stack, this.maxLength), this.position = Math.min(this.position, this.stack.length - 1), this.stack = this.stack.slice(0, this.position + 1);
            var e3 = this.editor.blocks.getCurrentBlockIndex();
            this.stack.push({ index: e3, state: t3 }), this.position += 1, this.onUpdate();
          } }, { key: "undo", value: function() {
            var t3 = this;
            if (this.canUndo()) {
              this.shouldSaveHistory = false;
              var e3 = this.stack[this.position -= 1], n3 = e3.index, i2 = e3.state;
              this.onUpdate(), this.editor.blocks.render({ blocks: i2 }).then(function() {
                return t3.editor.caret.setToBlock(n3, "end");
              });
            }
          } }, { key: "redo", value: function() {
            var t3 = this;
            if (this.canRedo()) {
              this.shouldSaveHistory = false;
              var e3 = this.stack[this.position += 1], n3 = e3.index, i2 = e3.state;
              this.onUpdate(), this.editor.blocks.render({ blocks: i2 }).then(function() {
                return t3.editor.caret.setToBlock(n3, "end");
              });
            }
          } }, { key: "canUndo", value: function() {
            return !this.readOnly && this.position > 0;
          } }, { key: "canRedo", value: function() {
            return !this.readOnly && this.position < this.count();
          } }, { key: "count", value: function() {
            return this.stack.length - 1;
          } }, { key: "parseKeys", value: function(t3) {
            var e3 = { CMD: /(Mac)/i.test(navigator.platform) ? "metaKey" : "ctrlKey", ALT: "altKey", SHIFT: "shiftKey" }, n3 = t3.slice(0, -1).map(function(t4) {
              return e3[t4];
            }), i2 = n3.includes("shiftKey") ? t3[t3.length - 1].toUpperCase() : t3[t3.length - 1].toLowerCase();
            return n3.push(i2), n3;
          } }, { key: "setEventListeners", value: function() {
            var t3 = this, e3 = this.holder, n3 = this.config.shortcuts, i2 = n3.undo, o2 = n3.redo, s3 = i2.replace(/ /g, "").split("+"), r = o2.replace(/ /g, "").split("+"), a = this.parseKeys(s3), c = this.parseKeys(r), h = function(t4, e4) {
              return !(2 !== e4.length || !t4[e4[0]] || t4.key !== e4[1]) || !(3 !== e4.length || !t4[e4[0]] || !t4[e4[1]] || t4.key !== e4[2]);
            }, u = function(e4) {
              h(e4, a) && (e4.preventDefault(), t3.undo());
            }, l = function(e4) {
              h(e4, c) && (e4.preventDefault(), t3.redo());
            };
            e3.addEventListener("keydown", u), e3.addEventListener("keydown", l), e3.addEventListener("destroy", function() {
              e3.removeEventListener("keydown", u), e3.removeEventListener("keydown", l);
            });
          } }]) && o(e2.prototype, n2), s2 && o(e2, s2), t2;
        }();
        return e.default;
      })();
    });
  }
});
export default require_bundle();
//# sourceMappingURL=editorjs-undo.js.map
